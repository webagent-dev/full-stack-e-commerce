const jwt = require('jsonwebtoken')

const verifyToken = (req,res, next) => {
    const authHeader = req.headers.authorization
    if(!authHeader || !authHeader.startsWith('Bearer')){
        res.status(402).json('you are not allow to access here')
    }else{
        try{
            const token = authHeader.split(' ')[1]
            // console.log(token)
            jwt.verify(token,process.env.MY_CODE,(err,user) => {
                if(err){
                    return res.status(404).json('invalid token received')
                }
                req.user = user
                next()
            })
        }catch(err){
            res.status(500).json(err.message)
        }
    }
}

const verifyTokenAndAdmin = (req,res,next) => {
    verifyToken(req,res,() => {
        if(req.user.id === req.params.id || req.user.admin){
          return   next()
        }else{
            res.status(402).json('you are not allow here')
        }
    })
}
const verifyTokenOnlyAdmin = (req,res,next) => {
    verifyTokenOnlyAdmin(req,res, () => {
        if(req.user.admin){
            return   next()
        }else{
            res.status(402).json('you are not allow to access here')
        }
    })
}
module.exports = {
    verifyToken, verifyTokenAndAdmin, verifyTokenOnlyAdmin
}